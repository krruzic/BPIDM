<Application x:Class="BPIDM.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:bp="clr-namespace:BPIDM" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006">
  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Resources/ColorStyles.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Red.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Blue.xaml" />
        <ResourceDictionary>
          <bp:AppBootstrapper x:Key="bootstrapper" />
          <BooleanToVisibilityConverter x:Key="bvc" />
        </ResourceDictionary>
        <ResourceDictionary>
          <Style x:Key="BPMenuButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource BPRed}" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                  <Border BorderThickness="0" Background="{TemplateBinding Background}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray" />
              </Trigger>
            </Style.Triggers>
          </Style>
          <Style x:Key="BPStandardButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource BPRed}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                  <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BPDarkRed}" />
              </Trigger>
            </Style.Triggers>
          </Style>
          <Style x:Key="BPFilterButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Background" Value="#FF6DB4EF" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="Button">
                  <Grid>
                    <Rectangle Fill="{TemplateBinding Background}">
                      <Rectangle.OpacityMask>
                        <ImageBrush ImageSource="{TemplateBinding Foreground}" />
                      </Rectangle.OpacityMask>
                    </Rectangle>
                    <Ellipse Fill="White" />
                    <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="IsPressed" Value="True">
                      <Setter TargetName="content" Property="RenderTransform">
                        <Setter.Value>
                          <TranslateTransform Y="0.5" X="0.5" />
                        </Setter.Value>
                      </Setter>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
          <!-- Style for AJAX-like wait spinners http://stackoverflow.com/a/1492141 -->
          <Style x:Key="WaitSpinnerStyle" TargetType="Control">
            <Setter Property="Foreground" Value="#888" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="Control">
                  <Viewbox Visibility="{TemplateBinding Visibility}">
                    <Canvas RenderTransformOrigin="0.5,0.5" Width="120" Height="120">
                      <Ellipse Width="21.835" Height="21.862" Canvas.Left="20.1696" Canvas.Top="9.76358" Stretch="Fill" Fill="{TemplateBinding Foreground}" Opacity="1.0" />
                      <Ellipse Width="20.835" Height="20.862" Canvas.Left="2.86816" Canvas.Top="29.9581" Stretch="Fill" Fill="{TemplateBinding Foreground}" Opacity="0.9" />
                      <Ellipse Width="19.835" Height="19.862" Canvas.Left="0.00001" Canvas.Top="57.9341" Stretch="Fill" Fill="{TemplateBinding Foreground}" Opacity="0.8" />
                      <Ellipse Width="17.835" Height="17.862" Canvas.Left="12.1203" Canvas.Top="83.3163" Stretch="Fill" Fill="{TemplateBinding Foreground}" Opacity="0.7" />
                      <Ellipse Width="16.835" Height="16.862" Canvas.Left="36.5459" Canvas.Top="98.1380" Stretch="Fill" Fill="{TemplateBinding Foreground}" Opacity="0.6" />
                      <Ellipse Width="14.835" Height="14.862" Canvas.Left="64.6723" Canvas.Top="96.8411" Stretch="Fill" Fill="{TemplateBinding Foreground}" Opacity="0.5" />
                      <Ellipse Width="13.835" Height="13.862" Canvas.Left="87.6176" Canvas.Top="81.2783" Stretch="Fill" Fill="{TemplateBinding Foreground}" Opacity="0.4" />
                      <Ellipse Width="12.835" Height="12.862" Canvas.Left="98.165" Canvas.Top="54.4140" Stretch="Fill" Fill="{TemplateBinding Foreground}" Opacity="0.3" />
                      <Ellipse Width="11.835" Height="11.862" Canvas.Left="92.9838" Canvas.Top="26.9938" Stretch="Fill" Fill="{TemplateBinding Foreground}" Opacity="0.2" />
                      <Canvas.RenderTransform>
                        <RotateTransform x:Name="SpinnerRotate" Angle="0" />
                      </Canvas.RenderTransform>
                      <Canvas.Triggers>
                        <EventTrigger RoutedEvent="ContentControl.Loaded">
                          <BeginStoryboard>
                            <Storyboard>
                              <DoubleAnimation Storyboard.TargetName="SpinnerRotate" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:01.7" RepeatBehavior="Forever" />
                            </Storyboard>
                          </BeginStoryboard>
                        </EventTrigger>
                      </Canvas.Triggers>
                    </Canvas>
                  </Viewbox>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </ResourceDictionary>
        <ResourceDictionary Source="Resources/ColorStyles.xaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Application.Resources>
</Application>